replicaCount: 1
image:
  registry: docker.io
  repository: ghost
  pullPolicy: IfNotPresent
  tag: "5"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  containerPort: 2368

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

extraVolumes: []

extraVolumeMounts: []

extraEnvVars: []

extraEnvVarsCM: ""

extraEnvVarsSecret: ""

allowEmptyPassword: false

ghostUsername: user
ghostPassword: ""
existingSecret: ""
ghostEmail: ghost@econradar.com
ghostBlogTitle: Econradar
ghostHost: ""
ghostPort: ""
ghostPath: /

smtpHost: ""
smtpPort: ""
smtpUser: ""
smtpPassword: ""

nodeEnv: "development"

mysql:
  enabled: true
  architecture: standalone
  auth:
    rootPassword: ""
    database: db
    username: user
    password: ""
    existingSecret: ""
  primary:
    persistence:
      enabled: true
      storageClass: ""
      accessModes:
        - ReadWriteOnce
      size: 8Gi

externalDatabase:
  host: localhost
  port: 3306
  user: user
  password: ""
  database: ghost
  existingSecret: ""
  ssl: false
  sslCaFile: ""

persistence:
  enabled: true
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  storageClass: ""
  annotations: {}
  accessModes:
    - ReadWriteOnce
  size: 8Gi
  existingClaim: ""
  subPath: ""