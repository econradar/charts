nameOverride: ghost

labels: {}
annotations: {}

mysql:
  enabled: true
  auth:
    existingSecret: ghost-db # keys: mysql-root-password, mysql-replication-password, mysql-password
  primary:
    persistence:
      enabled: true
      size: 10Gi

image:
  pullSecrets:
    - registry
  pullPolicy: IfNotPresent
  repository: registry.hub.docker.com
  image: ghost
  tag: 5

pvc:
  claims:
    content:
      accessMode: ReadWriteOnce
      size: 10Gi
  mounts: {}

deployment:
  replicaCount: 1
  updateStrategy:
    type: RollingUpdate

  priorityClassName: ""
  affinity: {}
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []

  nodeSelector: {}
  tolerations: []
  resources:
    requests:
      cpu: "100m"
      memory: "150Mi"
    limits: {}

  env:
    database__connection__host: '{{ include "ghost.mysql.fullname" . }}'
    database__connection__port: 3306

  config:
    - global
  secrets:
    - global

  protocol: HTTP
  port: 2368

  livenessProbe:
    endpoint: "/ghost/api/admin/site/"
    failureThreshold: 1
    initialDelaySeconds: 60
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 3

  readinessProbe:
    endpoint: "/ghost/api/admin/site/"
    failureThreshold: 1
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3

autoscaling:
  minReplicas: 1
  maxReplicas: 1
  avgCpuUtilization: 50

service:
  type: ClusterIP
  protocol: http
  port: 80

services:
  portal:
    pvc:
      mounts:
        "/var/lib/ghost/content": content

    autoscaling:
      enabled: false

    service:
      enabled: true
    ingress:
      enabled: false
      # hosts:
      #   - host: "${domain}"
      #   - host: "www.${domain}"
      # tls:
      #   - secretName: origin-cert
